===== ファイル構造についてのメモ（Gamma-2E-0以降） =====
・データは全て data ディレクトリ内に保存、基本的にはtxtファイル
・【】内はディレクトリ名

=== 初期設定類（root） ===
init.txt - 初期設定の一部を保存（イベント名、ファイルサイズ最大）　初期設定済みかどうかの判断にも使用
mail.txt - メール送信に関する設定をjsonで保存（送信元、送信専用の旨を書くかどうか、件名の接頭辞）
rec.txt - reCAPTCHA v2（Invisible reCAPTCHA）に関する設定をjsonで保存
siteurl.txt - 初期設定時に自動取得し、各種リンクなどに使用　設置URL変更時は「reget_url.php」にアクセスして書き換え（これはログイン不要）
seccheck.txt - セキュリティがまずい時に通知する用途で使う（予定）
examsetting.txt - ファイル確認関連の設定
exammember_submit.txt、exammember_edit.txt - ファイル確認者名簿（提出時／編集・共通情報変更時）

=== カスタムフォーム関連 ===
【form/submit】
【form/userinfo】
submitは提出時のカスタムフォーム、userinfoは共通情報フォーム
基本的なファイル構造はどちらも一緒
done.txt - フォームの設定が完了したという事を示す（中身は特に意味ない）
0.txt～9.txt - フォームの設定内容　実際の画面ではこの番号順に項目が並ぶ
　　　　　　　　必ず連番になる　項目削除などで欠番になったら詰める
　　　　　　　　各ファイルの構造は以下の通り
・id:項目の識別ID（項目新規作成時のunixタイムスタンプ）PHP・Javascriptの内部処理で使う（formでのidは「custom-xxxxxx」）
・type:形式（textbox、textbox2、textarea、radio、check、dropdown、attachのどれか）
・title:項目名
・required:必須？（0 任意　1 必須　2 いずれか必須※テキストボックス×2時）
・detail:欄の下に表示するテキスト
・max:最大文字数
・min:最小文字数
・width:フォーム幅
・height:テキストエリア高さ
・prefix_a:欄の前に表示するテキスト
・suffix_a:欄の後に表示するテキスト
・max2、min2、width2、prefix_b、suffix_b:テキストボックス×2の時に使う
・list:選択系の項目の選択肢　改行で区切り
・arrangement:テキストボックスや選択肢を縦に並べるか横に並べるか（"h"で横並び（horizontally））
・ext:添付ファイルの拡張子制限
・filenumber:同時にアップロード可能な個数
・size:添付ファイルサイズ最大
general.txt（submit内のみ） - ファイル提出の一般設定
　　　　　　　　　　　　　　　　構造は以下の通り
・type:形式（必ずgeneralになる）
・detail:欄の下に表示するテキスト
・ext:添付ファイルの拡張子制限
・filenumber:同時にアップロード可能な個数
・size:添付ファイルサイズ最大
・from、until:提出期間のunixタイムスタンプ

【draft】
編集途中内容を一時保存する場所　編集完了時にdraft内の内容を本番のところにコピー、draftディレクトリごと消す

=== ユーザー登録関連 ===
【users】
_promoter.txt、_co.txt、_general.txt、_outsider.txt
立場別のユーザーID一覧（順に主催者、共同運営者、一般参加者、非参加者）
ただし、主催と非参加者は1人なはず（非参加者はシステム管理者専用の立場）

XXXXXX.txt（上記以外のファイル）
各ユーザーの設定をjsonで保存　XXXXXXにはユーザー名が入る　ユーザー名は半角英数字限定
jsonの中身は以下の通り
・nickname（ニックネーム）
・email（メルアド）
・pwhash（ハッシュ化パスワード）
・state（立場 - pが主催者、cが共催、gが一般、oが非参加）
・admin（システム管理人だったら1、違えば0）
・lastip（最終ログインIP）
・lastbr（最終ログインユーザーエージェント　上記2つとログイン時のIP・エージェントと照合して違えばセキュリティ通知）
・common_acceptance（共通情報の承認状態　存在しなければ未入力）
・common_editing（共通情報が編集中かどうか）
・XXXXXX（上記以外はカスタム内容　テキストボックス×2は「XXXXXX-1」「XXXXXX-2」の2つが保存
　　　　　チェックボックス、添付ファイルはさらに配列になっている　添付ファイルはファイル名をテキスト保存・
　　　　　拡張子無しのファイルで本物のファイルを保存　それ以外はそのまま保存）

【users_reserve】
ユーザー作成中にIDを横取りされないように一時予約を自動でする
・XXXXXX.txt - XXXXXXにはIPアドレスが入る　予約期限（unixタイムスタンプ）と予約ユーザー名をjsonで保存（同じIPからの登録だったら通す）

=== ファイル提出関連 ===
【submit】
ユーザーIDごとにフォルダ作成、送信時のunixタイムスタンプを識別子として使い、ファイル名にする
jsonの中身は以下の通り
・title（タイトル）
・exam（0:承認待ち、1:承認、2:修正待ち、3:拒否）
・editing（1だと項目編集の承認待ち）
・submit（直接アップ時のファイル　ファイル名を配列でテキスト保存・拡張子無しのファイルで本物のファイルを保存）
・url、dldpw、due（外部経由アップ時のURL、DLパス、DL期限）
・XXXXXX（上記以外はカスタム内容　テキストボックス×2は「XXXXXX-1」「XXXXXX-2」の2つが保存
　　　　　チェックボックス、添付ファイルはさらに配列になっている　添付ファイルはファイル名をテキスト保存・
　　　　　拡張子無しのファイルで本物のファイルを保存　それ以外はそのまま保存）

=== 添付ファイル関連 ===
【files】
旧来バージョンで分散していたファイル保管場所を集約
ユーザーIDごとにフォルダ作成、そのフォルダの中に以下のフォルダがある
・common（共通情報）
・XXXXXX（提出作品のID）
各フォルダの中身は以下の通り
・main_XXXXXX_XX（提出作品のメインファイル　XXXXXXの部分はアップロード日時unix、XXが0～99の番号
　　　　　　　　　XXXXXX_XXの部分がファイル名を保存する配列のキー番号と対応）
・XXXXXX_XXXXXX_XX（カスタム内容のファイル　前のXXXXXXの部分は項目識別ID、後ろのXXXXXX_XXの部分は上と同じ）

=== ファイル確認関連 ===
【exam】
ファイル確認データの保管場所
ファイル名は「ユーザー名_提出項目の識別ID」　内容をjsonで保管
内容は下記
・_state（0:未投票がいる　1:議論中　2:議論終了 3:議論せず即決）
・_result（最終結果）
・ユーザーID→opinion（0:未投票　1:承認　2:修正求む　3:拒否）
　　　　　　→reason（2 or 3の時の理由）

【exam_discuss】
意見が分かれた際の議論のログ
ファイル名は「ユーザー名_提出項目の識別ID」　内容をjsonで保管
内容は下記
・read→ユーザーID（既読の管理　0:未読 1:既読　既読後に新たにコメントされた時に未読にしてメール通知）
・comments（コメント内容　配列になっており、キーは「送信者ID（システムによるものなら「-system」）_送信時unixタイムスタンプ」）

【exam_edit】
新規提出でなく、内容編集時の確認データ　＋共通情報の確認も
ファイル名は「ユーザー名_提出項目の識別ID_編集日時unix」（共通情報の識別IDはcommon）
その他は基本的に新規提出時の確認データと一緒だが承認と拒否の2択になっている
（0:未投票　1:承認　2:拒否）

【exam_edit_discuss】
内容編集の議論データ
ファイル名は「ユーザー名_提出項目の識別ID_編集日時unix」
その他は新規提出時の確認データと一緒

【edit】【edit_files】
内容編集のドラフトファイル
変更箇所についてのみ、submit、filesと同様に保存
承認されたら本物のファイルに上書きし、元ファイルは消す

=== メールの認証関連 ===
【mail】
メールに記載する一時的なリンク（PW再発行とか運営陣招待とか）関連のファイル
大体、中にセキュリティトークンと有効期限がjsonで保存されてる

=== ACL関連 ===
【fileacl】
共催のファイルアクセス権について管理
ユーザーごとにtxtファイル
アクセス権のある項目をjsonで保存
配列の中身は「任意のユーザー_userform」か「任意のユーザー_提出項目ID」

【outofterm】
期間外の情報操作権について管理
ユーザーごとにtxtファイル
編集権のある項目をjsonで保存
配列の中身は「userform」か「submit」か「提出項目ID」
更に、「expire」をキーとして期限のunix保存

=== メッセージ関連 ===
【messages】
メッセージを保管
「送信ユーザー名_作成日時unix.txt」の中にjsonで保管
内容は下記
・_replyof（特定のメッセージへの返信の場合、そのファイル名）
・_subject（件名）
・_content（内容）
・ユーザーID（送信先　複数指定可能　既読なら中身は1、未読は0）


===== SESSION変数の中身 =====
userid
nickname
email
state
admin（1:システム管理人　0:違う）
situation（例えば、ログイン時にこれを「loggedin」ってするとPHP側で認識して「ログインしました」と表示する
　　　　　　表示後はこれを空欄に戻すので、もう一回「ログインしました」とは出ない）
expire（最後のアクセスから30分先のunixスタンプ　30分経っていたらタイムアウトさせる）
useragent（ログイン時のユーザーエージェントを保管　逐一、アクセス元のエージェントと照合
　　　　　　セッションハイジャックをある程度防げる？）
authinfo（「MAD合作・合同誌向けファイル提出システム_サイトURL_ユーザーID」
　　　　　セッション認証用の文字列）
